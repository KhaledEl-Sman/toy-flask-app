name: Production CI

on:
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install linting tools
        run: |
          pip install flake8 autopep8

      - name: Auto-fix Python style issues
        run: autopep8 --in-place --recursive src/

      - name: Run flake8 linting
        run: flake8 src/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Get current date and time (Egypt time)
        run: echo "DATE_TAG=$(TZ='Africa/Cairo' date +'%Y-%m-%d--%I-%M%p')" >> $GITHUB_ENV

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/toy-flask-app:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/toy-flask-app:${{ env.DATE_TAG }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: terraform apply -auto-approve

      - name: Get EC2 Public IP
        id: get_ip
        run: |
          set -euo pipefail
          ec2_ip=$(terraform -chdir=terraform output -raw elastic_ip 2>/dev/null)
          echo "DEBUG: ec2_ip='$ec2_ip'"
          echo "ec2_ip=$ec2_ip" >> $GITHUB_ENV
          echo "ec2_ip=$ec2_ip" >> $GITHUB_OUTPUT

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip sshpass
          pip3 install ansible

      - name: Wait for SSH
        run: |
          for i in {1..30}; do
            nc -zv ${{ steps.get_ip.outputs.ec2_ip }} 22 && break
            echo "Waiting for SSH..." && sleep 10
          done

      - name: Run Ansible Playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | sed 's/\\n/\n/g' > key.pem
          chmod 600 key.pem
          echo "[ec2]" > inventory.ini
          echo "${{ steps.get_ip.outputs.ec2_ip }}" >> inventory.ini
          ansible-playbook -i inventory.ini ansible/playbook.yml --user ubuntu --private-key key.pem
